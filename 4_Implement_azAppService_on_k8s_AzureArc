


# Task 1: Prepare for implementing App Service on the Azure Arc enabled Kubernetes cluster
K8S_CLUSTER_RG_NAME=rg-aks-k8s-dev-001
K8S_CLUSTER_NAME=$(az aks list -g $K8S_CLUSTER_RG_NAME --query "[0].name" -o tsv)
K8S_ARC_PREFIX=k8sArc
ARC_RG_NAME="rg-${K8S_ARC_PREFIX}-k8s-dev-001"
ARC_CLUSTER_NAME="${K8S_ARC_PREFIX}-lz-dev-001"

CUSTOM_LOCATION_NAME="${K8S_ARC_PREFIX}-location"

EXTENSION_NAME="${K8S_ARC_PREFIX}-kube"
KUBE_ENV_NAME="${K8S_ARC_PREFIX}-env-001"

APP_SERVICE_NAMESPACE_NAME=appservice-ns

# Task 2: Create an Azure Log Analytics workspace

# Task 3: Install the Application services extension on the Azure Arc enabled Kubernetes cluster

az k8s-extension create -g $ARC_RG_NAME --name $EXTENSION_NAME --cluster-type connectedClusters -c $ARC_CLUSTER_NAME --extension-type 'Microsoft.Web.Appservice' --release-train stable --auto-upgrade-minor-version true --scope cluster --release-namespace $APP_SERVICE_NAMESPACE_NAME --configuration-settings "Microsoft.CustomLocation.ServiceAccount=default" --configuration-settings "appsNamespace=${APP_SERVICE_NAMESPACE_NAME}" --configuration-settings "clusterName=${KUBE_ENV_NAME}" --configuration-settings "buildService.storageClassName=default" --configuration-settings "buildService.storageAccessMode=ReadWriteOnce" --configuration-settings "envoy.annotations.service.beta.kubernetes.io/azure-load-balancer-resource-group=${K8S_CLUSTER_RG_NAME}" --configuration-settings "customConfigMap=${APP_SERVICE_NAMESPACE_NAME}/kube-environment-config"
az k8s-extension show --cluster-type connectedClusters -c $ARC_CLUSTER_NAME -g $ARC_RG_NAME --name $EXTENSION_NAME

# echo $EXTENSION_ID
# /subscriptions/b45738af-abb2-4c28-b2af-e045d8038ba5/resourceGroups/rg-k8sArc-k8s-dev-001/providers/Microsoft.Kubernetes/connectedClusters/k8sArc-lz-dev-001/providers/Microsoft.KubernetesConfiguration/extensions/k8sArc-kube


# Task 4: Create a custom location for the Azure Arc enabled Kubernetes cluster
CONNECTED_CLUSTER_ID=$(az connectedk8s show -n $ARC_CLUSTER_NAME -g $ARC_RG_NAME --query id -o tsv)
az customlocation create -g $ARC_RG_NAME -n $CUSTOM_LOCATION_NAME --host-resource-id $CONNECTED_CLUSTER_ID --namespace $APP_SERVICE_NAMESPACE_NAME -c $EXTENSION_ID
CUSTOM_LOCATION_ID=$(az customlocation show -g $ARC_RG_NAME -n $CUSTOM_LOCATION_NAME --query id -o tsv)

# Task 5: Register an App Service Kubernetes environment into the custom location
az appservice kube create -g $ARC_RG_NAME -n $KUBE_ENV_NAME --custom-location $CUSTOM_LOCATION_ID
az appservice kube show -g $ARC_RG_NAME -n $KUBE_ENV_NAME

